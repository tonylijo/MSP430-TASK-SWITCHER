.include "msp430g2x31.inc"

org 0xf800
;;;start routeine.
start:
         mov.w #(WDTPW|WDTHOLD), &WDTCTL
         mov.w #0x280, SP   
	 eint
	 mov r2,r4
	 dint   
         mov.b #255,&P1DIR
         mov.b #0,&P1OUT
     	 mov.b #0,&0x270
	 mov.w #(TASSEL_2|MC_1|ID_3), &TACTL
         mov.w #(CCIE), &TACCTL0
         mov.w #50000, &TACCR0
	 mov.w #0x258,SP
	 push task1
	 push r4
	 push 0
	 push 0
	 push 0
	 mov.w SP,&0x214
	 
	 mov.w #0x230,SP
	 mov.w SP,&0x216
         eint
	 jmp task2
gg:        jmp gg

;;;timer isr. 
isr:
	push.w r3
	push.w r4
	push.w r7
	mov.w &270 ,r4
   	rla r4
	mov.w SP,0x214(r4)
	mov.w &0x270,r4
	cmp #2,r4
	jne non_zero
	mov.w #0,&0x270
	mov.w #0,r4
non_zero:
	rla r4
	mov.w 0x214(r4),SP
	mov.w SP,r5
	add #10,r5
	mov.w r5,0x214(r4)
	
	add #1,&0x270
	pop.w r7
	pop.w r4
	pop.w r3
	pop.w r2
	pop.w r0
	reti
;;;task1 to execute.
task1:
	mov.w #0,r4
loop1:	
	inc r4
	cmp #5,r4
	jne else1_part
	mov.w #0,r4
	jmp else1_end
else1_part:
	mov.w #50000,r7
delay_start1:
	jz exit_delay1
		dec r7
	jmp delay_start1
exit_delay1:	
	mov.b r4,&P1OUT
else1_end:	
jmp loop1
	
;;;task2 to execute.
task2:
	mov.w #5,r4
loop2:
	cmp #8,r4
	jne else2_part
	mov.w #5,r4
	jmp else2_end
else2_part:
	mov.w #10000,r7
delay_start2:
	jz exit_delay2
		dec r7
	jmp delay_start2
exit_delay2:	
	mov.b r4,&P1OUT
	inc r4
else2_end:	
jmp loop2
	
;;vector table.
org 0xfffe          ;reset vector
       dw start
org 0xfff2
       dw isr
